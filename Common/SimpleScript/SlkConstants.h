
// SlkConstants.h - generated by the SLK parser generator 

#ifndef _SlkCONSTANTS_H
#define _SlkCONSTANTS_H

enum _Slk_token_defines { 
  OP_TOKEN_0_ = 1 
, OP_TOKEN_1_ = 2 
, OP_TOKEN_2_ = 3 
, OP_TOKEN_3_ = 4 
, OP_TOKEN_4_ = 5 
, OP_TOKEN_5_ = 6 
, OP_TOKEN_6_ = 7 
, OP_TOKEN_7_ = 8 
, OP_TOKEN_8_ = 9 
, OP_TOKEN_9_ = 10 
, OP_TOKEN_10_ = 11 
, OP_TOKEN_11_ = 12 
, OP_TOKEN_12_ = 13 
, OP_TOKEN_13_ = 14 
, OP_TOKEN_14_ = 15 
, OP_TOKEN_15_ = 16 
, OP_TOKEN_16_ = 17 
, LPAREN_ = 18 
, RPAREN_ = 19 
, LBRACK_ = 20 
, RBRACK_ = 21 
, DOT_ = 22 
, QUESTION_PERIOD_ = 23 
, QUESTION_PARENTHESIS_ = 24 
, QUESTION_BRACKET_ = 25 
, QUESTION_BRACE_ = 26 
, RBRACE_ = 27 
, POINTER_ = 28 
, PERIOD_STAR_ = 29 
, QUESTION_PERIOD_STAR_ = 30 
, POINTER_STAR_ = 31 
, LBRACE_ = 32 
, SCRIPT_CONTENT_ = 33 
, IDENTIFIER_ = 34 
, STRING_ = 35 
, NUMBER_ = 36 
, TRUE_ = 37 
, FALSE_ = 38 
, COMMA_ = 39 
, SEMI_ = 40 
, END_OF_SLK_INPUT_ = 41 
}; 

enum _Slk_Nonterminal_defines { 
  NT_PROGRAM_ = 42 
, NT_STATEMENTS_ = 43 
, NT_STATEMENT_ = 44 
, NT_OPERATOR_STATEMENT_1_ = 45 
, NT_OPERATOR_STATEMENT_2_ = 46 
, NT_OPERATOR_STATEMENT_3_ = 47 
, NT_OPERATOR_STATEMENT_4_ = 48 
, NT_OPERATOR_STATEMENT_5_ = 49 
, NT_OPERATOR_STATEMENT_6_ = 50 
, NT_OPERATOR_STATEMENT_7_ = 51 
, NT_OPERATOR_STATEMENT_8_ = 52 
, NT_OPERATOR_STATEMENT_9_ = 53 
, NT_OPERATOR_STATEMENT_10_ = 54 
, NT_OPERATOR_STATEMENT_11_ = 55 
, NT_OPERATOR_STATEMENT_12_ = 56 
, NT_OPERATOR_STATEMENT_13_ = 57 
, NT_OPERATOR_STATEMENT_14_ = 58 
, NT_OPERATOR_STATEMENT_15_ = 59 
, NT_OPERATOR_STATEMENT_16_ = 60 
, NT_OPERATOR_STATEMENT_DESC_0_ = 61 
, NT_OPERATOR_STATEMENT_DESC_1_ = 62 
, NT_OPERATOR_STATEMENT_DESC_2_ = 63 
, NT_OPERATOR_STATEMENT_DESC_3_ = 64 
, NT_OPERATOR_STATEMENT_DESC_4_ = 65 
, NT_OPERATOR_STATEMENT_DESC_5_ = 66 
, NT_OPERATOR_STATEMENT_DESC_6_ = 67 
, NT_OPERATOR_STATEMENT_DESC_7_ = 68 
, NT_OPERATOR_STATEMENT_DESC_8_ = 69 
, NT_OPERATOR_STATEMENT_DESC_9_ = 70 
, NT_OPERATOR_STATEMENT_DESC_10_ = 71 
, NT_OPERATOR_STATEMENT_DESC_11_ = 72 
, NT_OPERATOR_STATEMENT_DESC_12_ = 73 
, NT_OPERATOR_STATEMENT_DESC_13_ = 74 
, NT_OPERATOR_STATEMENT_DESC_14_ = 75 
, NT_OPERATOR_STATEMENT_DESC_15_ = 76 
, NT_OPERATOR_STATEMENT_DESC_16_ = 77 
, NT_FUNCTION_STATEMENT_ = 78 
, NT_FUNCTION_STATEMENT_DESC_ = 79 
, NT_FUNCTION_CALLS_ = 80 
, NT_FUNCTION_EX_CALL_ = 81 
, NT_FUNCTION_EX_CALL_SPECIAL_ = 82 
, NT_FUNCTION_PARAMS_ = 83 
, NT_MEMBER_DESC_ = 84 
, NT_MEMBER_DESC2_ = 85 
, NT_MEMBER_DESC3_ = 86 
, NT_MEMBER_DESC4_ = 87 
, NT_MEMBER_DESC5_ = 88 
, NT_MEMBER_DESC6_ = 89 
, NT_FUNCTION_ID_ = 90 
, NT_SEP_ = 91 
, NT_SEP_STATEMENT_STAR_ = 92 
, NT_OP_TOKEN_0_OPERATOR_STATEMENT_1_STAR_ = 93 
, NT_OP_TOKEN_1_OPERATOR_STATEMENT_2_STAR_ = 94 
, NT_OP_TOKEN_2_OPERATOR_STATEMENT_3_STAR_ = 95 
, NT_OP_TOKEN_3_OPERATOR_STATEMENT_4_OP_TOKEN_3_OPERATOR_STATEMENT_4_STAR_ = 96 
, NT_OP_TOKEN_4_OPERATOR_STATEMENT_5_STAR_ = 97 
, NT_OP_TOKEN_5_OPERATOR_STATEMENT_6_STAR_ = 98 
, NT_OP_TOKEN_6_OPERATOR_STATEMENT_7_STAR_ = 99 
, NT_OP_TOKEN_7_OPERATOR_STATEMENT_8_STAR_ = 100 
, NT_OP_TOKEN_8_OPERATOR_STATEMENT_9_STAR_ = 101 
, NT_OP_TOKEN_9_OPERATOR_STATEMENT_10_STAR_ = 102 
, NT_OP_TOKEN_10_OPERATOR_STATEMENT_11_STAR_ = 103 
, NT_OP_TOKEN_11_OPERATOR_STATEMENT_12_STAR_ = 104 
, NT_OP_TOKEN_12_OPERATOR_STATEMENT_13_STAR_ = 105 
, NT_OP_TOKEN_13_OPERATOR_STATEMENT_14_STAR_ = 106 
, NT_OP_TOKEN_14_OPERATOR_STATEMENT_15_STAR_ = 107 
, NT_OP_TOKEN_15_OPERATOR_STATEMENT_16_STAR_ = 108 
, NT_OP_TOKEN_16_FUNCTION_STATEMENT_STAR_ = 109 
, NT_FUNCTION_EX_CALL_STAR_ = 110 
, NT_FUNCTION_EX_CALL_2_STAR_ = 111 
, NT_FUNCTION_PARAMS_OPT_ = 112 
, NT_FUNCTION_PARAMS_2_OPT_ = 113 
, NT_FUNCTION_PARAMS_3_OPT_ = 114 
, NT_FUNCTION_PARAMS_4_OPT_ = 115 
, NT_FUNCTION_PARAMS_5_OPT_ = 116 
, NT_FUNCTION_PARAMS_6_OPT_ = 117 
, NT_FUNCTION_PARAMS_7_OPT_ = 118 
, NT_FUNCTION_PARAMS_8_OPT_ = 119 
, NT_FUNCTION_PARAMS_9_OPT_ = 120 
, NT_FUNCTION_PARAMS_10_OPT_ = 121 
, NT_FUNCTION_PARAMS_11_OPT_ = 122 
}; 

typedef unsigned short   slk_size_t;

#define NOT_A_SYMBOL       0
#define NONTERMINAL_SYMBOL 1
#define TERMINAL_SYMBOL    2
#define ACTION_SYMBOL      3

int SlkGetSymbolType ( slk_size_t symbol );
slk_size_t *SlkGetProductionArray ( slk_size_t   production_number );
slk_size_t *SlkGetState ( slk_size_t  state_number );
int SlkIsNonterminal ( slk_size_t symbol );
int SlkIsTerminal ( slk_size_t symbol );
int SlkIsAction ( slk_size_t symbol );


#endif
